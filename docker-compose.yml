version: "3.8"

# no-new-privileges:true : cette option empêche les conteneurs de changer de privilèges une fois qu'ils ont été démarrés. 
#   Elle est utilisée pour empêcher les processus dans le conteneur de bénéficier de privilèges supplémentaires, 
#   tels que l'accès au noyau ou l'escalade de privilèges. Lorsque cette option est définie sur true, 
#   le conteneur ne peut pas acquérir de nouveaux privilèges.

# seccomp:unconfined : cette option désactive le filtrage des appels système Linux en utilisant Seccomp. 
#   Seccomp est une fonctionnalité de sécurité Linux qui permet de restreindre les appels système qu'un processus peut effectuer. 
#   Lorsque cette option est définie sur unconfined, le conteneur est autorisé à effectuer tous les appels système.

services:
  mongo:
    image: mongo:latest
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    volumes:
      - ./data/db:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/ --quiet
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s

  discord_api:
    build: ./api
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    environment:
      MONGO_URL: "mongodb://root:root@mongo:27017"
    # Pour le dev 
    # ports:
    #   - "3000:3000"
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:3000/health || exit 1
      interval: 20s
      timeout: 20s
      retries: 5

  discord_bot:
    build: ./bot
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    environment:
      TOKEN: "{{ secret token_key }}"
      API_URL: "http://discord_api:3000"
    depends_on:
      discord_api:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:3000/health || exit 1
      interval: 5s
      timeout: 10s
      retries: 3

  discord_web:
    build: ./web
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    environment:
      API_URL: "http://discord_api:3000"
    ports:
      - "3001:3000"
    depends_on:
      discord_api:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:3000/health || exit 1
      interval: 5s
      timeout: 10s
      retries: 3

secrets:
  token_key:
    file: ./token_key.txt